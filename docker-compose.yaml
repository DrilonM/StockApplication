version: '3.8'

services:
  data-access-api:
    build:
      context: ./services/data-access-api
      dockerfile: data-access.Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - /efs/database:/usr/src/app/database  # Use EFS for persistent storage in AWS
    networks:
      - backend
    environment:
      - REACT_APP_API_BASE_URL=http://data-access-api:8081

  metrics-access-api:
    build:
      context: ./services/metrics-access-api
      dockerfile: metrics-access.Dockerfile
    ports:
      - "8082:8082"
    volumes:
      - /efs/database:/usr/src/app/database
    networks:
      - backend

  prediction-access-api:
    build:
      context: ./services/prediction-access-api
      dockerfile: prediction-access.Dockerfile
    ports:
      - "8084:8084"
    volumes:
      - /efs/database:/usr/src/app/database
    networks:
      - backend

  sentimet-access-api:
    build:
      context: ./services/sentimets-access-api
      dockerfile: sentiment-access.Dockerfile
    ports:
      - "8083:8083"
    volumes:
      - /efs/database:/usr/src/app/database
    networks:
      - backend

  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
    ports:
      - "3000:3000"
    networks:
      - frontend
      - backend

  python-scripts:
    build:
      context: ./python/scripts
      dockerfile: scripts.Dockerfile
    networks:
      - backend
    command: "python fetch_issuer_links.py && python scraper.py && python metrics_computer.py && python calculate_performance_metrics.py && python news_sentiments.py && python PricePredictor.py"
    volumes:
      - /efs/database:/usr/src/app/database  # Use EFS for persistent storage

  database-service:
    build:
      context: .
      dockerfile: database.Dockerfile
    networks:
      - backend
    volumes:
      - /efs/database:/usr/src/app/database  # Use EFS for persistent storage

networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  database:
    external: true  # Using external volume for EFS (Elastic File System)
